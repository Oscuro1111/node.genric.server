{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport Master from \"../../../app_components/commonHeader\";\nimport { get } from \"http\";\n\nfunction PostData({\n  data\n}) {\n  //data={type:Buffer,data:[]\n  return __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: data\n    }\n  });\n}\n\nexport default function Post({\n  latest,\n  postData,\n  title,\n  thum,\n  date\n}) {\n  var ref_ = null;\n  return __jsx(Master, {\n    thum: thum,\n    description: title\n  }, __jsx(Head, null), __jsx(\"body\", null, __jsx(\"nav\", {\n    class: \"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\"\n  }, __jsx(\"div\", {\n    class: \"container\"\n  }, __jsx(\"a\", {\n    class: \"navbar-brand\",\n    href: \"#\"\n  }, \"Tech-Inventory\"), __jsx(\"button\", {\n    class: \"navbar-toggler\",\n    type: \"button\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#navbarResponsive\",\n    \"aria-controls\": \"navbarResponsive\",\n    \"aria-expanded\": \"false\",\n    \"aria-label\": \"Toggle navigation\"\n  }, __jsx(\"span\", {\n    class: \"navbar-toggler-icon\"\n  })), __jsx(\"div\", {\n    class: \"collapse navbar-collapse\",\n    id: \"navbarResponsive\"\n  }, __jsx(\"ul\", {\n    class: \"navbar-nav ml-auto\"\n  }, __jsx(\"li\", {\n    class: \"nav-item active\"\n  }, __jsx(\"a\", {\n    class: \"nav-link\",\n    href: '/'\n  }, \"Home\", __jsx(\"span\", {\n    class: \"sr-only\"\n  }, \"(current)\"))), __jsx(\"li\", {\n    class: \"nav-item\"\n  }, __jsx(Link, {\n    href: \"/about\"\n  }, __jsx(\"a\", {\n    class: \"nav-link\",\n    href: \"#\"\n  }, \"About\"))))))), __jsx(\"div\", {\n    class: \"container\"\n  }, __jsx(\"div\", {\n    class: \"row\"\n  }, __jsx(\"div\", {\n    class: \"col-lg-8\"\n  }, __jsx(\"h1\", {\n    class: \"mt-4\"\n  }, title), __jsx(\"hr\", null), __jsx(\"p\", null, \"Posted on \", date), __jsx(\"hr\", null), __jsx(\"img\", {\n    class: \"img-fluid rounded\",\n    src: thum || \"http://placehold.it/750x300\",\n    alt: \"\"\n  }), __jsx(\"hr\", null), __jsx(PostData, {\n    data: postData\n  })), __jsx(\"div\", {\n    class: \"col-md-4\"\n  }, __jsx(\"div\", {\n    class: \"card my-4\"\n  }, __jsx(\"h5\", {\n    class: \"card-header\"\n  }, \"Search\"), __jsx(\"div\", {\n    class: \"card-body\"\n  }, __jsx(\"div\", {\n    class: \"input-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"Search for...\",\n    ref: ref => {\n      ref_ = ref;\n    }\n  }), __jsx(\"span\", {\n    class: \"input-group-append\"\n  }, __jsx(\"button\", {\n    onClick: e => {\n      if (ref_ && ref_.value) {\n        window.location.assign(`/search/${ref_.value}`);\n      }\n    },\n    type: \"submit\",\n    class: \"btn btn-secondary\"\n  }, \"Search\"))))), __jsx(\"div\", {\n    class: \"card my-4\"\n  }, __jsx(\"h5\", {\n    class: \"card-header\"\n  }, \"Latest\"), __jsx(\"div\", {\n    class: \"card-body\"\n  }, __jsx(\"div\", {\n    class: \"row\"\n  }, __jsx(\"div\", {\n    class: \"col-lg-6\"\n  }, __jsx(\"ul\", {\n    class: \"list-unstyled mb-0\"\n  }, latest && latest.map((post, index) => {\n    return __jsx(\"li\", {\n      key: index\n    }, __jsx(Link, {\n      href: \"/Blog/post/[id].js\",\n      as: `/Blog/post/${post.postId}?thum=${post.thum}&title=${post.title}&author=${post.author}&date=${post.date}`\n    }, __jsx(\"a\", null, post.title)));\n  })))))), __jsx(\"div\", {\n    class: \"card my-4\"\n  }, __jsx(\"h5\", {\n    class: \"card-header\"\n  }, \"Side Widget\"), __jsx(\"div\", {\n    class: \"card-body\"\n  }, \"ADS\"))))), __jsx(\"footer\", {\n    class: \"py-5 bg-dark\"\n  }, __jsx(\"div\", {\n    class: \"container\"\n  }, __jsx(\"p\", {\n    class: \"m-0 text-center text-white\"\n  }, \"Copyright \\xA9 Your Website 2020\")))));\n}\n\nfunction fetcher(url, notJSON) {\n  var data = [];\n  const initFetch = new Promise((resolve, reject) => {\n    get(url, function (res_) {\n      res_.on(\"data\", chunk => {\n        data.push(chunk);\n      });\n      res_.on(\"close\", _ => {\n        console.log(\"closing\");\n\n        if (notJSON) {\n          var data_Bytes = Buffer.concat(data);\n          resolve(data_Bytes.toString(\"utf8\"));\n        } else {\n          var data_Bytes = Buffer.concat(data);\n          var data_json = JSON.parse(data_Bytes.toString());\n          resolve(data_json);\n        }\n      });\n    });\n  });\n  return initFetch;\n}\n\nexport async function getServerSideProps(response) {\n  const {\n    id,\n    thum,\n    title,\n    date\n  } = response.query;\n  const postData = await fetcher(\"http://techserver01.herokuapp.com/post/data/\" + `${id}`, true);\n  const latest = await fetcher(\"http://techserver01.herokuapp.com/latestPosts\", false);\n  return {\n    props: {\n      latest,\n      postData,\n      thum,\n      title,\n      date\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}